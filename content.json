{"meta":{"title":"geekMessi","subtitle":null,"description":null,"author":"Liyuan Wang","url":"http://yoursite.com"},"pages":[{"title":"Categories","date":"2017-01-02T07:59:03.956Z","updated":"2017-01-02T07:59:03.956Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"About","date":"2017-01-02T07:59:03.949Z","updated":"2017-01-02T07:59:03.949Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"archives","date":"2017-01-02T15:24:55.000Z","updated":"2017-01-02T15:24:55.342Z","comments":true,"path":"archives/index.html","permalink":"http://yoursite.com/archives/index.html","excerpt":"","text":""},{"title":"Tags","date":"2017-01-02T07:59:03.963Z","updated":"2017-01-02T07:59:03.963Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"虚拟机类加载机制","slug":"虚拟机类加载机制","date":"2017-01-02T15:21:33.000Z","updated":"2017-01-02T15:22:56.828Z","comments":true,"path":"2017/01/02/虚拟机类加载机制/","link":"","permalink":"http://yoursite.com/2017/01/02/虚拟机类加载机制/","excerpt":"","text":"虚拟机类加载机制 虚拟机把描述类的数据从Class文件加载到内存中，并对数据进行校验，转换解析和初始化，最终形成可以被虚拟机只直接使用的类型，就是虚拟机的类加载机制。类加载的时机 遇到new，getstatic,putstatic,invokestatic,四条指令时。 使用java.lang.reflect包的方法对类进行反射调用的时候 当初始化一个类的时候，如果其父类还没有被初始化，先触发其父类的初始化。 当虚拟机启动的时候，用户需要指定一个要执行的主类(包含main方法的)，虚拟机会先初始化这个类。 java.lang.invoke.MethodHandle实例最后的解析结果是REF_getStatic,REF_putstatic,REF_invokestatic的方法时。 类加载过程 类从被加载到虚拟机内存中开始，到卸载出内存为止，整个生命周期包括：加载，验证，准备，解析，初始化，使用，卸载。 类加载过程包括加载，验证，准备，解析，初始化。","categories":[{"name":"JVM","slug":"JVM","permalink":"http://yoursite.com/categories/JVM/"}],"tags":[{"name":"JVM","slug":"JVM","permalink":"http://yoursite.com/tags/JVM/"},{"name":"JAVA","slug":"JAVA","permalink":"http://yoursite.com/tags/JAVA/"}]}]}